name: PR CI App - Android

on:
  pull_request:
    branches: [ main ]
    paths-ignore: [ README.md ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: ${{ startsWith(github.event.pull_request.head.ref, 'release/') != true && github.event.pull_request.draft != true }}

    runs-on: ubuntu-24.04
    timeout-minutes: 20

    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Detect Flutter version
      uses: kuhnroyal/flutter-fvm-config-action@v3

    - name: Setup Flutter
      uses: hrishikesh-kadam/setup-flutter@v1
      with:
        ref: ${{ env.FLUTTER_VERSION }}
        setFlutterRootPath: 'true'
        addPubCacheBinToPath: 'true'
        flutterPrecache: '--android'

    - name: Disable Flutter analytics and CLI animations
      run: flutter config --no-analytics --no-cli-animations

    - name: Install minimal Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        targets: x86_64-linux-android,aarch64-linux-android,armv7-linux-androideabi

    # Yes, I have tried adding cache like for macOS in MomentoBooth photobooth repo, however
    # I can't find where the Rust target folder is created during `flutter build`...

    - name: Setup sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.6

    - name: Install cargo-expand
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-expand

    - name: Install flutter_rust_bridge_codegen
      uses: baptiste0928/cargo-install@v3
      with:
        crate: flutter_rust_bridge_codegen
        version: "2.5.1"

    - name: Install dependencies
      run: flutter pub get --enforce-lockfile

    - name: Generation l10n
      run: flutter gen-l10n

    - name: Generate Dart-to-Rust bridging code
      run: flutter_rust_bridge_codegen generate

    - name: Code generation
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Flutter analyze
      run: flutter analyze

    - name: Build app bundle
      env:
        ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
        STORE_FILE: /tmp/keystore.jks
      run: |
        echo $ANDROID_KEYSTORE | base64 --decode > $STORE_FILE
        flutter build appbundle -v --no-pub --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ steps.extract_release_version.outputs.distributor_version }} --dart-define FLUTTER_VERSION=${{ env.FLUTTER_VERSION }}
